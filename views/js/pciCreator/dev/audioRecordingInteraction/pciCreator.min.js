define("tpl!audioRecordingInteraction/creator/tpl/propertiesForm",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){function program1(depth0,data){return'checked="checked"'}function program3(depth0,data){return"selected"}function program5(depth0,data){return' selected="selected"'}function program7(depth0,data){return" hidden"}this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,options,buffer="",helperMissing=helpers.helperMissing,escapeExpression=this.escapeExpression,self=this
;return buffer+='<div class="panel">\n    <label for="" class="has-icon">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Response identifier",options):helperMissing.call(depth0,"__","Response identifier",options)))+'</label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content:first" data-tooltip-theme="info"></span>\n    <div class="tooltip-content">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options):helperMissing.call(depth0,"__",'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options)))+'</div>\n\n    <input type="text"\n           name="identifier"\n           value="',
(helper=helpers.identifier)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.identifier,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'"\n           placeholder="e.g. RESPONSE"\n           data-validate="$notEmpty; $qtiIdentifier; $availableIdentifier(serial=',(helper=helpers.serial)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.serial,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+');">\n</div>\n\n<div class="panel">\n    <label>\n        <input name="allowPlayback" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.allowPlayback,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Allow playback",options):helperMissing.call(depth0,"__","Allow playback",options)))+'\n    </label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Give the possibility to the test taker to playback its own recording.",options):helperMissing.call(depth0,"__","Give the possibility to the test taker to playback its own recording.",options)))+'\n    </span>\n</div>\n\n<div class="panel">\n    <label>\n        <input name="autoStart" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.autoStart,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Auto start recording",options):helperMissing.call(depth0,"__","Auto start recording",options)))+'\n    </label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.",options):helperMissing.call(depth0,"__","Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.",options)))+'\n    </span>\n</div>\n\n<div class="panel">\n    <label for="maxRecords" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Max attempts:",options):helperMissing.call(depth0,"__","Max attempts:",options)))+'</label>\n    <input name="maxRecords" value="',(helper=helpers.maxRecords)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.maxRecords,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="0" type="text" />\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,
options={hash:{},data:data},helper?helper.call(depth0,"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.",options):helperMissing.call(depth0,"__","Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.",options)))+'\n    </span>\n</div>\n<div class="panel">\n    <label for="maxRecordingTime" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Time limit:",options):helperMissing.call(depth0,"__","Time limit:",options)))+'</label>\n    <input name="maxRecordingTime" value="',(helper=helpers.maxRecordingTime)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.maxRecordingTime,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="10" data-min="10" type="text" />\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.",options):helperMissing.call(depth0,"__","In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.",options)))+'\n    </span>\n</div>\n\n<hr />\n\n<div class="panel">\n    <label for="recordingFormat">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Recording format",options):helperMissing.call(depth0,"__","Recording format",options)))+'</label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).",options):helperMissing.call(depth0,"__","With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).",options)))+'\n    </span>\n    <select name="recordingFormat">\n        <option value="compressed_lossy" ',helper=helpers.eq||depth0&&depth0.eq,options={hash:{},data:data},
stack1=helper?helper.call(depth0,depth0&&depth0.recordingFormat,"compressed_lossy",options):helperMissing.call(depth0,"eq",depth0&&depth0.recordingFormat,"compressed_lossy",options),stack1=helpers.if.call(depth0,stack1,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Compressed (lossy)",options):helperMissing.call(depth0,"__","Compressed (lossy)",options)))+'</option>\n        <option value="compressed_lossless" ',helper=helpers.eq||depth0&&depth0.eq,options={hash:{},data:data
},stack1=helper?helper.call(depth0,depth0&&depth0.recordingFormat,"compressed_lossless",options):helperMissing.call(depth0,"eq",depth0&&depth0.recordingFormat,"compressed_lossless",options),stack1=helpers.if.call(depth0,stack1,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Compressed (lossless)",options):helperMissing.call(depth0,"__","Compressed (lossless)",options)))+'</option>\n        <option value="uncompressed" ',helper=helpers.eq||depth0&&depth0.eq,options={hash:{},
data:data},stack1=helper?helper.call(depth0,depth0&&depth0.recordingFormat,"uncompressed",options):helperMissing.call(depth0,"eq",depth0&&depth0.recordingFormat,"uncompressed",options),stack1=helpers.if.call(depth0,stack1,{hash:{},inverse:self.noop,fn:self.program(3,program3,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Uncompressed",options):helperMissing.call(depth0,"__","Uncompressed",options)))+'</option>\n    </select>\n</div>\n\n<div data-role="compressedLossyOptions" style="display: none">\n    <div class="panel">\n        <label for="audioBitrate" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Audio bitrate:",options):helperMissing.call(depth0,"__","Audio bitrate:",options)))+'</label>\n        <input name="audioBitrate" value="',(helper=helpers.audioBitrate)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.audioBitrate,
stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" class="large" data-increment="1000" data-min="8000" type="text" />\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.",options):helperMissing.call(depth0,"__","In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.",options)))+'\n        </span>\n    </div>\n</div>\n\n<div data-role="compressedLosslessOptions" style="display: none">\n    <div class="panel">\n        <label for="sampleRate" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Sample Rate:",options):helperMissing.call(depth0,"__","Sample Rate:",options)))+'</label>\n        <input name="sampleRate" value="',(helper=helpers.sampleRate)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.sampleRate,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="50" data-min="1000" data-max="48000" type="text" />\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Audio sample rate in Hz",options):helperMissing.call(depth0,"__","Audio sample rate in Hz",options)))+'\n        </span>\n    </div>\n    <div class="panel">\n        <label for="compressionLevel" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Compression level",options):helperMissing.call(depth0,"__","Compression level",options)))+'</label>\n        <input name="compressionLevel" value="',(helper=helpers.compressionLevel)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.compressionLevel,
stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="0" data-max="8" type="text" />\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"The desired Flac compression level",options):helperMissing.call(depth0,"__","The desired Flac compression level",options)))+'\n        </span>\n    </div>\n    <div class="panel">\n        <label for="bps" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Bps",options):helperMissing.call(depth0,"__","Bps",options)))+'</label>\n        <input name="bps" value="',(helper=helpers.bps)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.bps,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),
buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="1" data-max="32" type="text" />\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Bits per sample",options):helperMissing.call(depth0,"__","Bits per sample",options)))+'\n        </span>\n    </div>\n    <div class="panel">\n        <label for="blockSize" class="spinner">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Block size",options):helperMissing.call(depth0,"__","Block size",options)))+'</label>\n        <input name="blockSize" value="',(helper=helpers.blockSize)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.blockSize,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" class="large" data-increment="1" data-min="0" type="text" />\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,
options={hash:{},data:data},helper?helper.call(depth0,"The number of samples to user per frame",options):helperMissing.call(depth0,"__","The number of samples to user per frame",options)))+'\n        </span>\n    </div>\n    <div class="panel">\n        <label>\n            <input name="verify" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.verify,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\n            <span class="icon-checkbox"></span>\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Verify",options):helperMissing.call(depth0,"__","Verify",options)))+'\n        </label>\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Enable or disable checksum verification during encoding",options):helperMissing.call(depth0,"__","Enable or disable checksum verification during encoding",options)))+'\n    </span>\n    </div>\n</div>\n\n<div data-role="uncompressedOptions" style="display: none">\n    <div class="panel">\n        <label for="isStereo">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Channels",options):helperMissing.call(depth0,"__","Channels",options)))+'</label>\n        <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n        <span class="tooltip-content">\n            '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Number of channels for the recording. Allow to cut the record size in half if used in mono.",options):helperMissing.call(depth0,"__","Number of channels for the recording. Allow to cut the record size in half if used in mono.",options)))+'\n        </span>\n        <select name="isStereo">\n            <option value="false"',stack1=helpers.unless.call(depth0,depth0&&depth0.isStereo,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Mono",options):helperMissing.call(depth0,"__","Mono",options)))+'</option>\n            <option value="true"',stack1=helpers.if.call(depth0,depth0&&depth0.isStereo,{hash:{},inverse:self.noop,fn:self.program(5,program5,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+=">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Stereo",options):helperMissing.call(depth0,"__","Stereo",options)))+'</option>\n        </select>\n    </div>\n</div>\n\n<hr />\n\n<div class="panel">\n    <label>\n        <input name="useMediaStimulus" type="checkbox" ',
stack1=helpers.if.call(depth0,depth0&&depth0.useMediaStimulus,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\n        <span class="icon-checkbox"></span> '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"Use media stimulus",options):helperMissing.call(depth0,"__","Use media stimulus",options)))+'\n    </label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,
options={hash:{},data:data},helper?helper.call(depth0,"This options allow to insert a media stimulus that will have to be played before recording can happen.",options):helperMissing.call(depth0,"__","This options allow to insert a media stimulus that will have to be played before recording can happen.",options)))+'\n    </span>\n</div>\n\n<div class="panel">\n    <div class="media-stimulus-properties-form',stack1=helpers.unless.call(depth0,depth0&&depth0.useMediaStimulus,{hash:{},inverse:self.noop,fn:self.program(7,program7,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),
buffer+='"></div>\n</div>\n\n<hr />\n\n<div class="panel">\n    <label>\n        <input name="displayDownloadLink" type="checkbox" ',stack1=helpers.if.call(depth0,depth0&&depth0.displayDownloadLink,{hash:{},inverse:self.noop,fn:self.program(1,program1,data),data:data}),(stack1||0===stack1)&&(buffer+=stack1),buffer+='/>\n        <span class="icon-checkbox"></span>\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Allow download",options):helperMissing.call(depth0,"__","Allow download",options)))+'\n    </label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content" data-tooltip-theme="info"></span>\n    <span class="tooltip-content">\n        '+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.",options):helperMissing.call(depth0,"__","This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.",options)))+"\n    </span>\n</div>\n"})}),
define("audioRecordingInteraction/creator/widget/states/Question",["lodash","i18n","jquery","taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager","taoQtiItem/qtiCreator/editor/simpleContentEditableElement","taoQtiItem/qtiCreator/editor/containerEditor","tpl!audioRecordingInteraction/creator/tpl/propertiesForm","util/typeCaster"],function(_,__,$,stateFactory,Question,formElement,pciMediaManagerFactory,simpleEditor,containerEditor,formTpl,typeCaster){"use strict"
;function configChangeCallBack(interaction,value,name){interaction.prop(name,value),interaction.triggerPci("configChange",[interaction.getProperties()])}var AudioRecordingInteractionStateQuestion=stateFactory.extend(Question,function(){var $container=this.widget.$container,$prompt=$container.find(".prompt"),interaction=this.widget.element;containerEditor.create($prompt,{change:function(text){interaction.data("prompt",text),interaction.updateMarkup()},markup:interaction.markup,markupSelector:".prompt",related:interaction,areaBroker:this.widget.getAreaBroker()})},function(){var $container=this.widget.$container,$prompt=$container.find(".prompt")
;simpleEditor.destroy($container),containerEditor.destroy($prompt)});return AudioRecordingInteractionStateQuestion.prototype.initForm=function(){var $mediaStimulusForm,$uncompressedOptions,$compressedLossyOptions,$compressedLosslessOptions,_widget=this.widget,$form=_widget.$form,interaction=_widget.element,response=interaction.getResponseDeclaration(),pciMediaManager=pciMediaManagerFactory(_widget);switch($form.html(formTpl({serial:response.serial,identifier:interaction.attr("responseIdentifier"),allowPlayback:typeCaster.strToBool(interaction.prop("allowPlayback"),!0),autoStart:typeCaster.strToBool(interaction.prop("autoStart"),!1),
maxRecords:interaction.prop("maxRecords"),maxRecordingTime:interaction.prop("maxRecordingTime"),audioBitrate:interaction.prop("audioBitrate"),sampleRate:interaction.prop("sampleRate"),isStereo:typeCaster.strToBool(interaction.prop("isStereo"),!1),useMediaStimulus:typeCaster.strToBool(interaction.prop("useMediaStimulus"),!1),displayDownloadLink:typeCaster.strToBool(interaction.prop("displayDownloadLink"),!1),recordingFormat:interaction.prop("recordingFormat"),isCompressed:typeCaster.strToBool(interaction.prop("isCompressed"),!0),isLossless:typeCaster.strToBool(interaction.prop("isLossless"),!1),compressionLevel:interaction.prop("compressionLevel"),
bps:interaction.prop("bps"),verify:typeCaster.strToBool(interaction.prop("verify"),!1),blockSize:interaction.prop("blockSize")})),$mediaStimulusForm=$form.find(".media-stimulus-properties-form"),$mediaStimulusForm.append(pciMediaManager.getForm()),$uncompressedOptions=$form.find('[data-role="uncompressedOptions"]'),$compressedLossyOptions=$form.find('[data-role="compressedLossyOptions"]'),$compressedLosslessOptions=$form.find('[data-role="compressedLosslessOptions"]'),formElement.initWidget($form),interaction.prop("recordingFormat")){case"compressed_lossy":$uncompressedOptions.hide(),$compressedLossyOptions.show(),$compressedLosslessOptions.hide();break
;case"compressed_lossless":$uncompressedOptions.hide(),$compressedLossyOptions.hide(),$compressedLosslessOptions.show();break;case"uncompressed":$uncompressedOptions.show(),$compressedLossyOptions.hide(),$compressedLosslessOptions.hide()}formElement.setChangeCallbacks($form,interaction,_.assign({allowPlayback:configChangeCallBack,autoStart:configChangeCallBack,maxRecords:configChangeCallBack,maxRecordingTime:configChangeCallBack,audioBitrate:configChangeCallBack,sampleRate:configChangeCallBack,isStereo:configChangeCallBack,displayDownloadLink:configChangeCallBack,compressionLevel:configChangeCallBack,bps:configChangeCallBack,verify:configChangeCallBack,
blockSize:configChangeCallBack,identifier:function(i,value){response.id(value),interaction.attr("responseIdentifier",value)},useMediaStimulus:function(boundInteraction,value,name){value?($mediaStimulusForm.removeClass("hidden"),$mediaStimulusForm.show(250)):$mediaStimulusForm.hide(250),configChangeCallBack(boundInteraction,value,name)},recordingFormat:function(boundInteraction,value,name){switch(value){case"compressed_lossy":configChangeCallBack(boundInteraction,!0,"isCompressed"),configChangeCallBack(boundInteraction,!1,"isLossless"),$uncompressedOptions.hide(),$compressedLossyOptions.show(),$compressedLosslessOptions.hide();break;case"compressed_lossless":
configChangeCallBack(boundInteraction,!0,"isCompressed"),configChangeCallBack(boundInteraction,!0,"isLossless"),$uncompressedOptions.hide(),$compressedLossyOptions.hide(),$compressedLosslessOptions.show();break;case"uncompressed":configChangeCallBack(boundInteraction,!1,"isCompressed"),configChangeCallBack(boundInteraction,null,"isLossless"),$uncompressedOptions.show(),$compressedLossyOptions.hide(),$compressedLosslessOptions.hide()}configChangeCallBack(boundInteraction,value,name)}},pciMediaManager.getChangeCallbacks())),pciMediaManager.init()},AudioRecordingInteractionStateQuestion}),
define("audioRecordingInteraction/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","audioRecordingInteraction/creator/widget/states/Question"],function(factory,states){"use strict";return factory.createBundle(states,arguments,["answer","correct","map"])}),define("audioRecordingInteraction/creator/widget/Widget",["handlebars","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","audioRecordingInteraction/creator/widget/states/states"],function(Handlebars,Widget,states){"use strict";Handlebars.registerHelper("eq",function(arg1,arg2){
return arg1===arg2});var AudioRecordingInteractionWidget=Widget.clone();return AudioRecordingInteractionWidget.initCreator=function(){this.registerStates(states),Widget.initCreator.call(this)},AudioRecordingInteractionWidget}),define("tpl!audioRecordingInteraction/creator/tpl/markup",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,buffer="";return buffer+='<div class="audioRecordingInteraction">\n    <div class="prompt">',(helper=helpers.prompt)?stack1=helper.call(depth0,{hash:{},data:data
}):(helper=depth0&&depth0.prompt,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),(stack1||0===stack1)&&(buffer+=stack1),buffer+=' </div>\n    <div class="audio-rec">\n        <div class="media-stimulus"> </div>\n        <div class="input-meter">\n            <div class="leds"> </div>\n            <div class="mic"> </div>\n        </div>\n        <div class="progress"> </div>\n        <div class="controls"> </div>\n    </div>\n</div>'})}),define("audioRecordingInteraction/pciCreator",["audioRecordingInteraction/creator/widget/Widget","tpl!audioRecordingInteraction/creator/tpl/markup"],function(Widget,markupTpl){"use strict"
;return{getTypeIdentifier:function(){return"audioRecordingInteraction"},getWidget:function(){return Widget},getDefaultProperties:function(){return{allowPlayback:!0,autoStart:!1,maxRecords:2,maxRecordingTime:120,isCompressed:!0,isLossless:!0,audioBitrate:2e4,sampleRate:22050,isStereo:!1,compressionLevel:5,bps:16,verify:!1,blockSize:0,useMediaStimulus:!1,media:{autostart:!0,replayTimeout:5,maxPlays:2},displayDownloadLink:!1,recordingFormat:"compressed_lossy"}},afterCreate:function(){},getMarkupTemplate:function(){return markupTpl},getMarkupData:function(pci,defaultData){return defaultData.prompt=pci.data("prompt"),defaultData}}}),
define(["audioRecordingInteraction/pciCreator"],function(PCI){return PCI});
//# sourceMappingURL=pciCreator.min.js.map